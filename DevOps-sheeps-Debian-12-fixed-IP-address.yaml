# Sheeps. Worker nodes for a Web Dev cluster
#
# Usage:
#    ansible-playbook --ask-vault DevOps-xxx.yaml
#
---
- name: Cloning MVs. Sheeps for DevOps cluster
  hosts: localhost
  gather_facts: false

# Variables
# --

# encrypted file with ansible-vault with the variable
# {{ ovirt_password }} storing the IaaS ULL password

  vars_files:
    - vblancoULL.yaml

# SSH key for the user "ansible" 

  vars:
    ssh_keys: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGWdPaKUP/JoE3xzds/4a9DtOmD3vucEPZniTFGfwdj3gUFRJ/P62AlyiRVF8HXaOPmjzPzUnTEHxQIr6m6Pch/GjbYhk57Yp3B+F7HUQJ/rquSG/huNGLQMIOXpeGy1XT+tSLZobIwHbRSugU8QunCB8OupVhehvFaI+FqpUngo9gLo/bfFSZ7XtxzgUoeniPKdYZagVGfpfFwKTKoFGfK7IJAwOpgPmqCnoagCuaZIHeepnIxvZoyJqB4LRDSbH/DySOjuMzGveuKgFwyjWjFKsJBL5KgcZOF0DBmiBWkIJCKUU85yUbj4ApHwC2W4xiNTZ9z9GZDLeCXjRt6eQr ansible@control

# IaaS user (change vblanco by aluxxx...)

    ovirt_login: vblanco@ULL

# Distro
    distro: debian-12-sinred-cloudinit

# Node names to create  (in these case, two "sheeps")

    prefix: DevOps-Profesor
    nodes:
      - name: sheep-1
        ip: 172.20.20.101
      - name: sheep-2
        ip: 172.20.20.102

# Private network profile assigned to each Lab group
# See IaaS ULL portal

    node_nics: 
      - name: nic1
        profile_name: DOCP2P-4010

# Tasks
# ------

  tasks:
    - name: Login to IaaS
      ovirt_auth:
        url: https://iaas.ull.es/ovirt-engine/api
        insecure: yes
        username: "{{ ovirt_login }}"
        password: "{{ ovirt_password }}"
        headers:
          filter: true

    - name: Create a VM
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        cluster: Cluster-Rojo
        name: "{{ prefix }}-{{ item.name }}"
        cpu_cores: 1
        cpu_sockets: 1
        memory: 1GiB
        template: "{{ distro }}"
        nics: "{{ node_nics }}"
        state: present
        wait: yes
      with_items: "{{ nodes }}"
    
    - name: Update VM via cloud-init
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        name: "{{ prefix }}-{{ item.name }}"
        state: running
        cloud_init_nics:
          - nic_name: ens3
            nic_boot_protocol: static
            nic_ip_address: "{{ item.ip }}"
            nic_netmask: 255.255.255.0
            nic_gateway: 172.20.20.1
            nic_on_boot: True
        cloud_init:
          host_name: "{{ item.name }}"
          user_name: ansible

# Passwd generated with mkpasswd -m SHA-512 alumno2020
# Clear text password is: alumno2020
          root_password: $6$3diC789eX$WZPkCdIrIm11cbZyhx/uwsydqgqEb1hsBvOXIF31ngjqxYhGyXMdaHZrwsf8vZHqEBoqPoXhWANPR/itAEU7l.

          authorized_ssh_keys: "{{ ssh_keys }}"
          custom_script: |
            write_files:
              - path: /etc/sudoers.d/ansible
                permissions: '0644'
                content: |
                  ansible ALL=(ALL) NOPASSWD:ALL
              - path: /tmp/saludos.txt
                permissions: '0644'
                content: |
                  "Que pasa, Oveja"
            runcmd:
              - sed -i '/AllowUsers/c\AllowUsers adminstic usuario soporteiass ansible' /etc/ssh/sshd_config
              - systemctl restart sshd
        wait: yes
      with_items: "{{ nodes }}"

    - name: Cleanup IaaS auth token
      ovirt_auth:
        ovirt_auth: "{{ ovirt_auth }}"
        state: absent
